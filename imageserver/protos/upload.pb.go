// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: protos/upload.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UploadPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjName string `protobuf:"bytes,1,opt,name=obj_name,json=objName,proto3" json:"obj_name,omitempty"`
	Image   []byte `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *UploadPhotoRequest) Reset() {
	*x = UploadPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPhotoRequest) ProtoMessage() {}

func (x *UploadPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPhotoRequest.ProtoReflect.Descriptor instead.
func (*UploadPhotoRequest) Descriptor() ([]byte, []int) {
	return file_protos_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadPhotoRequest) GetObjName() string {
	if x != nil {
		return x.ObjName
	}
	return ""
}

func (x *UploadPhotoRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type UploadPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadPhotoResponse) Reset() {
	*x = UploadPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPhotoResponse) ProtoMessage() {}

func (x *UploadPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPhotoResponse.ProtoReflect.Descriptor instead.
func (*UploadPhotoResponse) Descriptor() ([]byte, []int) {
	return file_protos_upload_proto_rawDescGZIP(), []int{1}
}

type CreateMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjName  string   `protobuf:"bytes,1,opt,name=obj_name,json=objName,proto3" json:"obj_name,omitempty"`
	User     string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Hashtags []string `protobuf:"bytes,3,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
}

func (x *CreateMetadataRequest) Reset() {
	*x = CreateMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetadataRequest) ProtoMessage() {}

func (x *CreateMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetadataRequest.ProtoReflect.Descriptor instead.
func (*CreateMetadataRequest) Descriptor() ([]byte, []int) {
	return file_protos_upload_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMetadataRequest) GetObjName() string {
	if x != nil {
		return x.ObjName
	}
	return ""
}

func (x *CreateMetadataRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateMetadataRequest) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

type CreateMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateMetadataResponse) Reset() {
	*x = CreateMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMetadataResponse) ProtoMessage() {}

func (x *CreateMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMetadataResponse.ProtoReflect.Descriptor instead.
func (*CreateMetadataResponse) Descriptor() ([]byte, []int) {
	return file_protos_upload_proto_rawDescGZIP(), []int{3}
}

var File_protos_upload_proto protoreflect.FileDescriptor

var file_protos_upload_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x45, 0x0a, 0x12, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x99, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_upload_proto_rawDescOnce sync.Once
	file_protos_upload_proto_rawDescData = file_protos_upload_proto_rawDesc
)

func file_protos_upload_proto_rawDescGZIP() []byte {
	file_protos_upload_proto_rawDescOnce.Do(func() {
		file_protos_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_upload_proto_rawDescData)
	})
	return file_protos_upload_proto_rawDescData
}

var file_protos_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_upload_proto_goTypes = []interface{}{
	(*UploadPhotoRequest)(nil),     // 0: grpc.UploadPhotoRequest
	(*UploadPhotoResponse)(nil),    // 1: grpc.UploadPhotoResponse
	(*CreateMetadataRequest)(nil),  // 2: grpc.CreateMetadataRequest
	(*CreateMetadataResponse)(nil), // 3: grpc.CreateMetadataResponse
}
var file_protos_upload_proto_depIdxs = []int32{
	0, // 0: grpc.UploadPhoto.Upload:input_type -> grpc.UploadPhotoRequest
	2, // 1: grpc.UploadPhoto.CreateMetadata:input_type -> grpc.CreateMetadataRequest
	1, // 2: grpc.UploadPhoto.Upload:output_type -> grpc.UploadPhotoResponse
	3, // 3: grpc.UploadPhoto.CreateMetadata:output_type -> grpc.CreateMetadataResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_upload_proto_init() }
func file_protos_upload_proto_init() {
	if File_protos_upload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_upload_proto_goTypes,
		DependencyIndexes: file_protos_upload_proto_depIdxs,
		MessageInfos:      file_protos_upload_proto_msgTypes,
	}.Build()
	File_protos_upload_proto = out.File
	file_protos_upload_proto_rawDesc = nil
	file_protos_upload_proto_goTypes = nil
	file_protos_upload_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UploadPhotoClient is the client API for UploadPhoto service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UploadPhotoClient interface {
	//
	// RPC for upload a photo to the image database
	Upload(ctx context.Context, in *UploadPhotoRequest, opts ...grpc.CallOption) (*UploadPhotoResponse, error)
	//
	// RPC for create hashtag-image mapping in the metadata database
	CreateMetadata(ctx context.Context, in *CreateMetadataRequest, opts ...grpc.CallOption) (*CreateMetadataResponse, error)
}

type uploadPhotoClient struct {
	cc grpc.ClientConnInterface
}

func NewUploadPhotoClient(cc grpc.ClientConnInterface) UploadPhotoClient {
	return &uploadPhotoClient{cc}
}

func (c *uploadPhotoClient) Upload(ctx context.Context, in *UploadPhotoRequest, opts ...grpc.CallOption) (*UploadPhotoResponse, error) {
	out := new(UploadPhotoResponse)
	err := c.cc.Invoke(ctx, "/grpc.UploadPhoto/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uploadPhotoClient) CreateMetadata(ctx context.Context, in *CreateMetadataRequest, opts ...grpc.CallOption) (*CreateMetadataResponse, error) {
	out := new(CreateMetadataResponse)
	err := c.cc.Invoke(ctx, "/grpc.UploadPhoto/CreateMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UploadPhotoServer is the server API for UploadPhoto service.
type UploadPhotoServer interface {
	//
	// RPC for upload a photo to the image database
	Upload(context.Context, *UploadPhotoRequest) (*UploadPhotoResponse, error)
	//
	// RPC for create hashtag-image mapping in the metadata database
	CreateMetadata(context.Context, *CreateMetadataRequest) (*CreateMetadataResponse, error)
}

// UnimplementedUploadPhotoServer can be embedded to have forward compatible implementations.
type UnimplementedUploadPhotoServer struct {
}

func (*UnimplementedUploadPhotoServer) Upload(context.Context, *UploadPhotoRequest) (*UploadPhotoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedUploadPhotoServer) CreateMetadata(context.Context, *CreateMetadataRequest) (*CreateMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetadata not implemented")
}

func RegisterUploadPhotoServer(s *grpc.Server, srv UploadPhotoServer) {
	s.RegisterService(&_UploadPhoto_serviceDesc, srv)
}

func _UploadPhoto_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadPhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadPhotoServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UploadPhoto/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadPhotoServer).Upload(ctx, req.(*UploadPhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UploadPhoto_CreateMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadPhotoServer).CreateMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.UploadPhoto/CreateMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadPhotoServer).CreateMetadata(ctx, req.(*CreateMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UploadPhoto_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.UploadPhoto",
	HandlerType: (*UploadPhotoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upload",
			Handler:    _UploadPhoto_Upload_Handler,
		},
		{
			MethodName: "CreateMetadata",
			Handler:    _UploadPhoto_CreateMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/upload.proto",
}
